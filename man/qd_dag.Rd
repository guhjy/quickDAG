% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qd_dag.R
\name{qd_dag}
\alias{qd_dag}
\title{Generate a graph object}
\usage{
qd_dag(edgelist, node.labs = NULL, node.aes.opts = list(),
  edge.aes.opts = list(), checks = TRUE)
}
\arguments{
\item{edgelist}{A vector of edge relationships. Must be strictly organized (see example).}

\item{node.labs}{A character vector containing label names. Defaults to \code{NULL}.}

\item{node.aes.opts}{A list feeding aesthetic options for nodes to \code{DiagrammeR::node_aes()}. Defaults to empty list.}

\item{edge.aes.opts}{A list feeding aesthetic options for edges to \code{DiagrammeR::edge_aes()}. Defaults to empty list.}

\item{checks}{A logical switch indicating whether to print node and edge dataframes to the console. See NOTE below. Defaults to \code{TRUE}.}
}
\description{
Provide simple syntax specifying paths between nodes to generate a graph object.
}
\note{
Leaving the \code{checks} option selected may be advisable to ensure labels and IDs have not been mismatched. By default, \code{qd_dag()} alphabetizes nodes included in \code{edgelist} and does the same for \code{node.labs} under a first assumption that labels will begin with the same letter as their corresponding \code{alpha.id}, which may not always be the case.

Suggestions and bug reports welcome at \url{https://github.com/jrgant/quickDAG/issues}.


Packages used: DiagrammeR, stringr, purrr
}
\examples{
# Provide a list of edges, with nodes specified as letters.
# Do not list a node as a parent more than once.
# Function cannot currently accept the form: "A -> B -> C", and user must
# enter spaces between all entities.
edges <- c("A -> { B C }",
           "B -> C")

# make a DAG object and render the graph
g.obj <- qd_dag(edges)
render_graph(g.obj)

}
